# Code generated by font-to-py.py.
# Font: FreeSans.ttf
version = '0.2'

def height():
    return 34

def max_width():
    return 24

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 46

def max_ch():
    return 57

_font =\
b'\x18\x00\x00\x60\x00\x07\xfe\x00\x1f\xff\x80\x3f\xff\xc0\x3e\x07'\
b'\xc0\x78\x03\xe0\x78\x01\xe0\x78\x01\xe0\xf0\x01\xe0\xf0\x01\xe0'\
b'\xf0\x01\xe0\x00\x01\xe0\x00\x03\xe0\x00\x07\xc0\x00\x0f\x80\x00'\
b'\x1f\x00\x00\x3e\x00\x00\x7c\x00\x00\x78\x00\x00\xf0\x00\x00\xf0'\
b'\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00'\
b'\xf0\x00\x00\xf0\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\xf0\x00\xf0\x00\xf0\x00\xf0\x00\xf0\x00\x00\x00\x0d\x00'\
b'\x00\x00\x00\x30\x00\x30\x00\x70\x00\x60\x00\x60\x00\xe0\x00\xc0'\
b'\x00\xc0\x01\xc0\x01\x80\x01\x80\x03\x80\x03\x80\x03\x00\x07\x00'\
b'\x07\x00\x06\x00\x06\x00\x0e\x00\x0c\x00\x0c\x00\x1c\x00\x18\x00'\
b'\x18\x00\x38\x00\x30\x00\x30\x00\x70\x00\x60\x00\x60\x00\xe0\x00'\
b'\xe0\x00\xc0\x00\x18\x00\x00\x00\x00\x00\x00\x00\x03\xfc\x00\x07'\
b'\xff\x00\x0f\xff\x80\x1f\x0f\x80\x3e\x07\xc0\x3c\x03\xe0\x78\x01'\
b'\xe0\x78\x01\xe0\x78\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0'\
b'\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0'\
b'\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00'\
b'\xf0\x78\x00\xf0\x78\x01\xe0\x78\x01\xe0\x3c\x03\xc0\x3e\x07\xc0'\
b'\x1f\x0f\x80\x0f\xff\x00\x07\xfe\x00\x01\xf8\x00\x18\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\xe0\x00\x00\xe0\x00\x00\xe0\x00\x01\xe0\x00'\
b'\x03\xe0\x00\x1f\xe0\x00\xff\xe0\x00\xff\xe0\x00\xff\xe0\x00\x01'\
b'\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0'\
b'\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00'\
b'\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01'\
b'\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0\x00\x01\xe0'\
b'\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x03\xfe\x00\x0f'\
b'\xff\x80\x1f\xff\xc0\x3f\x8f\xe0\x3c\x03\xe0\x7c\x01\xf0\x78\x00'\
b'\xf0\x78\x00\xf0\xf0\x00\x70\xf0\x00\xf0\xf0\x00\xf0\x00\x00\xf0'\
b'\x00\x01\xf0\x00\x01\xe0\x00\x07\xe0\x00\x0f\xc0\x00\x3f\x80\x00'\
b'\xfe\x00\x01\xfc\x00\x07\xf0\x00\x0f\xc0\x00\x1f\x00\x00\x3e\x00'\
b'\x00\x7c\x00\x00\x78\x00\x00\xf0\x00\x00\xf0\x00\x00\xff\xff\xf0'\
b'\xff\xff\xf0\xff\xff\xf0\xff\xff\xf0\x00\x00\x00\x18\x00\x00\x00'\
b'\x00\x00\x00\x00\x03\xfe\x00\x07\xff\x80\x1f\xff\xc0\x1f\x87\xe0'\
b'\x3e\x01\xf0\x3c\x00\xf0\x7c\x00\xf0\x78\x00\xf0\x78\x00\xf0\x78'\
b'\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x03\xe0\x00\x7f\xc0\x00\x7f'\
b'\x80\x00\x7f\x80\x00\x7f\xe0\x00\x01\xf0\x00\x00\xf8\x00\x00\x78'\
b'\x00\x00\x78\x00\x00\x78\xf0\x00\x78\x70\x00\x78\x78\x00\x78\x78'\
b'\x00\x78\x7c\x00\xf0\x3e\x01\xf0\x3f\xdf\xe0\x1f\xff\xc0\x07\xff'\
b'\x80\x01\xfc\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x03\x80\x00'\
b'\x07\x80\x00\x0f\x80\x00\x0f\x80\x00\x1f\x80\x00\x3f\x80\x00\x3f'\
b'\x80\x00\x7f\x80\x00\xf7\x80\x01\xe7\x80\x01\xc7\x80\x03\xc7\x80'\
b'\x07\x87\x80\x07\x07\x80\x0f\x07\x80\x1e\x07\x80\x3c\x07\x80\x38'\
b'\x07\x80\x78\x07\x80\xf0\x07\x80\xff\xff\xfc\xff\xff\xfc\xff\xff'\
b'\xfc\xff\xff\xfc\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80'\
b'\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x00\x00\x18\x00\x00\x00'\
b'\x00\x00\x00\x00\x1f\xff\xe0\x1f\xff\xe0\x3f\xff\xe0\x3f\xff\xe0'\
b'\x3c\x00\x00\x3c\x00\x00\x3c\x00\x00\x38\x00\x00\x38\x00\x00\x78'\
b'\x00\x00\x78\x20\x00\x7b\xfe\x00\x7f\xff\x80\x7f\xff\xc0\x7e\x07'\
b'\xe0\x78\x03\xe0\x70\x01\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf8'\
b'\x00\x00\x78\x00\x00\x78\x00\x00\x70\xe0\x00\xf0\xf0\x00\xf0\xf0'\
b'\x00\xf0\xf8\x01\xe0\x7c\x03\xe0\x3f\xbf\xc0\x1f\xff\x80\x0f\xff'\
b'\x00\x03\xf8\x00\x18\x00\x00\x00\x00\x00\x00\x00\x01\xfe\x00\x07'\
b'\xff\x00\x0f\xff\xc0\x1f\x8f\xc0\x1e\x03\xe0\x3c\x01\xe0\x3c\x00'\
b'\xf0\x78\x00\xf0\x78\x00\x00\x70\x00\x00\xf0\x00\x00\xf0\x00\x00'\
b'\xf1\xfe\x00\xf7\xff\x80\xff\xff\xc0\xff\x07\xe0\xfc\x01\xe0\xf8'\
b'\x01\xf0\xf8\x00\xf0\xf0\x00\xf0\xf0\x00\x78\xf0\x00\x78\xf0\x00'\
b'\x78\x70\x00\xf0\x78\x00\xf0\x78\x00\xf0\x3c\x01\xe0\x3e\x03\xe0'\
b'\x1f\xdf\xc0\x0f\xff\x80\x07\xff\x00\x01\xfc\x00\x18\x00\x00\x00'\
b'\x00\x00\x00\x00\xff\xff\xf8\xff\xff\xf8\xff\xff\xf8\xff\xff\xf8'\
b'\x00\x00\xf0\x00\x00\xe0\x00\x01\xc0\x00\x03\xc0\x00\x03\x80\x00'\
b'\x07\x00\x00\x0f\x00\x00\x0e\x00\x00\x1e\x00\x00\x1c\x00\x00\x3c'\
b'\x00\x00\x78\x00\x00\x78\x00\x00\x70\x00\x00\xf0\x00\x00\xe0\x00'\
b'\x01\xe0\x00\x01\xe0\x00\x03\xc0\x00\x03\xc0\x00\x03\xc0\x00\x03'\
b'\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x0f\x00\x00\x0f\x00'\
b'\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x03\xfc\x00\x0f'\
b'\xff\x00\x1f\xff\x80\x3f\x0f\xc0\x7c\x03\xe0\x78\x01\xe0\x78\x01'\
b'\xe0\x78\x01\xe0\x78\x01\xe0\x78\x01\xe0\x78\x01\xe0\x3c\x03\xe0'\
b'\x3e\x07\xc0\x1f\xff\x80\x07\xfe\x00\x1f\xff\x80\x3f\x9f\xc0\x7c'\
b'\x03\xe0\x78\x01\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\x78\xf0\x00'\
b'\x78\xf0\x00\x78\xf0\x00\xf0\xf0\x00\xf0\xf8\x01\xf0\x7c\x03\xe0'\
b'\x3f\xff\xc0\x1f\xff\x80\x0f\xff\x00\x03\xfc\x00\x18\x00\x00\x00'\
b'\x00\x00\x00\x00\x03\xfc\x00\x0f\xff\x00\x1f\xff\x80\x3f\x0f\xc0'\
b'\x7c\x03\xc0\x78\x01\xe0\xf0\x01\xe0\xf0\x00\xe0\xf0\x00\xf0\xf0'\
b'\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x00\xf0\xf0\x01\xf0\xf8\x01'\
b'\xf0\x7c\x03\xf0\x3f\x1f\xf0\x3f\xff\xf0\x0f\xfe\xf0\x07\xf8\xf0'\
b'\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x01\xe0\xf0\x01\xe0\x78'\
b'\x01\xe0\x78\x03\xc0\x7c\x07\xc0\x3f\xbf\x80\x1f\xff\x00\x0f\xfe'\
b'\x00\x03\xf8\x00'

_index =\
b'\x00\x00\x68\x00\xae\x00\xf4\x00\x5c\x01\xc4\x01\x2c\x02\x94\x02'\
b'\xfc\x02\x64\x03\xcc\x03\x34\x04\x9c\x04\x04\x05'

_mvfont = memoryview(_font)

def _chr_addr(ordch):
    offset = 2 * (ordch - 46)
    return int.from_bytes(_index[offset:offset + 2], 'little')

def get_ch(ch):
    ordch = ord(ch)
    ordch = ordch + 1 if ordch >= 46 and ordch <= 57 else 46
    offset = _chr_addr(ordch)
    width = int.from_bytes(_font[offset:offset + 2], 'little')
    next_offs = _chr_addr(ordch +1)
    return _mvfont[offset + 2:next_offs], 34, width
 
